###Eureka Client configuration for Poc Service that register with Eureka

# see the README in eureka-examples to see an overview of the example set up

## configurations related to self identification for registration.
## There are other properties that can be defined, see eureka-client/../CloudInstanceConfig for full details.
# where am I deployed?
eureka.region=default

# note that for a purely client usage (e.g. only used to get information about other services,
# there is no need for registration. This property applies to the singleton DiscoveryClient so
# if you run a server that is both a service provider and also a service consumer,
# then don't set this property to false.
eureka.registration.enabled=true


# what is my application name? (clients can query on this appName)
eureka.name=sampleRegisteringService

# what is my application virtual ip address? (clients can query on this vipAddress)
eureka.vipAddress=sampleservice.mydomain.net

# what is the port that I serve on? (Change this if port 8001 is already in use in your environment)
eureka.port=8080

## configuration related to reaching the eureka servers
eureka.preferSameZone=true
eureka.shouldUseDns=false
#eureka.serviceUrl.default=http://localhost:9080/eureka/v2/
eureka.serviceUrl.default=http://ec2-54-164-94-36.compute-1.amazonaws.com:8080/eureka/v2/


IRestService.ribbon.NIWSServerListClassName=com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList 
# the server must register itself with Eureka server with VipAddress "myservice"
IRestService.ribbon.DeploymentContextBasedVipAddresses=sampleservice.mydomain.net
